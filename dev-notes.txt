#some actions request use of sudo when they don't have to
#owner of that folder needs to be changed using
#sudo chown -R <user>:<user> <dir> or
#sudo chown -R `whoami` <dir>
ex : sudo chown -R sho:sho ~/.npm
or
sudo chown -R `whoami` ~/.atom

#creating vagrant ubuntu vm
vagrant init hashicorp/precise32 --minimal

#setting up virtualbox on Ubuntu. see here for details (https://www.virtualbox.org/wiki/Linux_Downloads)
#add to distro list
$ sudo add-apt-repository -y "deb http://download.virtualbox.org/virtualbox/debian trusty contrib"
#to download
$ wget http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc
# to verify fingerprint
$ gpg --with-fingerprint oracle_vbox.asc
# add key
$ sudo apt-key add oracle_vbox.asc
#to be able to pull packages we need to update package sources
$ sudo apt-key add oracle_vbox.asc
#install virtualbox and dynamic kernel module support package(dkms)
sudo apt-get -y install virtualbox-4.3 dkms

#Installing java(8) Oracle JDK on Linux Ubuntu
sudo apt-add-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer

#uninstalling it
sudo apt-get remove oracle-java7-installer

#switching to super user to avoid typing sudo
sudo su

# installing docker on ubuntu
#Add docker repository key to apt-key for package verification:
sudo sh -c "wget -qO- https://get.docker.io/gpg | apt-key add -"
#Add the docker repository to aptitude sources:
sudo sh -c "echo deb http://get.docker.io/ubuntu docker main\
> /etc/apt/sources.list.d/docker.list"
#update the repository with the new addition
sudo apt-get update
#download and install docker
sudo apt-get install lxc-docker

#or on latest Ubuntu version
sudo apt-get update
sudo apt-get install -y docker.io

#confirm it's installed and running
sudo service docker.io status

#Vagrant to VM
git clone https://github.com/soboy2/vagrant-docker-provisioner
cd vagrant-docker-provisioner && vagrant up
vagrant ssh
sudo docker

#Starting Docker - interactive shell
sudo docker run -i -t ubuntu /bin/bash
# -i "option to keep STDIN open even if something is not attached"
# -t "assign pseudo-TTY interaction"
# ubuntu "image the container will be a model or implementation of"
# /bin/bash "path to bash to execute"

#Disconnect Docker without exiting with
Ctrl-p + Ctrl-q

#adding an alias for 'docker ps'
alias dps="docker ps"

#peeking into a running docker container
#requires the pid from inspecting it
docker inspect ea4a8d23bfc2 | grep Pid

nsenter -m -u -n -p -i -t 8349 /bin/bash

#or official way of getting a shell in running container
docker exec -it 33c5537a6ad2 /bin/bash
